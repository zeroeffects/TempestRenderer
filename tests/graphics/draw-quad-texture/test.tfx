struct GlobalsDesc
{
    mat4 Transform;
};

resource buffer Resources
{
    sampler2D Texture;
}

structbuffer GlobalsDesc Globals;

vertex shader
{
    in vec2      VertexData;

    flat out int DrawIndex;
    out vec2     TexCoord;
    
    void main()
    {
        DrawIndex = tge_DrawID;
        TexCoord = VertexData;
        gl_Position = Globals[tge_DrawID].Transform*vec4(VertexData.xy, 0.0, 1.0);
    }
}

fragment shader
{
    flat in int DrawIndex;
    in vec2     TexCoord;

    out vec4    FragmentColor;

    void main()
    {
        uint tex_slot, tex_slice;
        vec3 color = texture(Texture, TexCoord).xyz;
        FragmentColor = vec4(color, 1.0);
    }
}