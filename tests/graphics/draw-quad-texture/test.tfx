struct GlobalsDesc
{
    mat4 Transform;
};

resource buffer Resources
{
    sampler2D Texture;
}

structbuffer GlobalsDesc Globals;

vertex shader
{
    layout(location = 0, vb_offset = 0, vb_format = RG32F) in vec2 VertexData;

    layout(location = 0) flat out int DrawIndex;
    layout(location = 1) out vec2     TexCoord;
    
    void main()
    {
        DrawIndex = tge_DrawID;
        TexCoord = VertexData;
        gl_Position = Globals[tge_DrawID].Transform*vec4(VertexData.xy, 0.0, 1.0);
    }
}

fragment shader
{
    layout(location = 0) flat in int DrawIndex;
    layout(location = 1) in vec2     TexCoord;

    layout(location = 0) out vec4    FragmentColor;

    void main()
    {
        FragmentColor = texture(Texture, TexCoord);
    }
}