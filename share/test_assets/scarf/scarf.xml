<?xml version="1.0" encoding="utf-8"?>

<scene version="0.5.0">
	<integrator type="volpath_simple">
		<!-- High quality settings:
		    <integer name="maxDepth" value="250"/>
		-->
		<!-- Settings for faster render time (but less appealing output) -->
		<integer name="maxDepth" value="15"/>
	</integrator>

	<medium type="heterogeneous" id="scarf">
		<!-- Sample medium interactions using Woodcock-tracking -->
		<string name="method" value="woodcock"/>
		<!-- Increase the densities by a factor of 100, otherwise the
			 scarf is too wispy -->
		<float name="scale" value="100"/>
		<!-- The densities are from a hierarchical grid that gets mapped into memory -->

		<volume name="density" type="hgridvolume">
			<string name="filename" value="data/volume_description.vol"/>
			<string name="prefix" value="data/volume_"/>
			<string name="postfix" value="-density.vol"/>
		</volume>
		<!-- Ditto for the orientations -->

		<volume name="orientation" type="hgridvolume">
			<string name="filename" value="data/volume_description.vol"/>
			<string name="prefix" value="data/volume_"/>
			<string name="postfix" value="-orientation.vol"/>
		</volume>
		<!-- The scarf has a very high constant single-scattering albedo throughout the 
			 volume. Reduce this to make the scene less difficult to render (it won't 
			 look as nice though)-->

		<volume name="albedo" type="constvolume">
			<!-- High quality settings:
 			    <spectrum name="value" value="0.97 0.97 0.99"/>
			-->
			<!-- Settings for faster render time (but less appealing output) -->
			<spectrum name="value" value="0.8 0.8 0.9"/>
		</volume>
		<!-- Simulate rough fibers with micro-flakes having the new
			 distribution from the CT scanning paper. Smaller standard
			 deviations cause shinier fibers -->

		<phase type="microflake">
			<float name="stddev" value="0.3"/>
		</phase>
	</medium>

	<shape type="obj">
		<!-- Clipping geometry for the scarf (reduces
			 ray marching through empty space) -->
		<string name="filename" value="data/volume-stencil.obj"/>
		<!-- The scarf volume is attached to the interior of
			 this mesh -->

		<ref name="interior" id="scarf"/>
	</shape>
	<!-- Light source -->

	<shape type="sphere">
		<point name="center" x="4.3" y="18" z="5.2"/>
		<float name="radius" value="2"/>

		<emitter type="area">
			<spectrum name="radiance" value="45"/>
		</emitter>

		<bsdf type="diffuse"/>
	</shape>
	<!-- Ground plane -->

	<shape type="obj">
		<string name="filename" value="plane.obj"/>
		<transform name="toWorld">
			<translate x="0" y=".2" z="0"/>
		</transform>

		<bsdf type="diffuse">
			<spectrum name="reflectance" value="0.5"/>

			<texture name="reflectance" type="bitmap">
				<string name="filename" value="data/concrete.png"/>
			</texture>
		</bsdf>
	</shape>

	<sensor type="perspective">
		<string name="fovAxis" value="smaller"/>
		<float name="focusDistance" value="10000"/>
		<transform name="toWorld">
			<scale x="-1"/>
			<scale x="-1"/>
			<lookAt target="0.453311, 15.3292, 20.2983" origin="0.485459, 15.9918, 21.0465" up="0.00133283, 0.748602, -0.663019"/>
		</transform>
		<float name="fov" value="45"/>

		<sampler type="ldsampler">
			<!-- High quality settings: 
			    <integer name="sampleCount" value="256"/>
			-->
			<!-- Settings for faster render time (but less appealing output) -->
			<integer name="sampleCount" value="32"/>
		</sampler>

		<film type="ldrfilm">
			<integer name="width" value="1024"/>
			<integer name="height" value="768"/>
			<boolean name="banner" value="false"/>
			<string name="pixelFormat" value="rgb"/>

			<rfilter type="gaussian"/>
		</film>
	</sensor>
</scene>
